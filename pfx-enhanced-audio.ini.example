# Enhanced Audio System Configuration Example
# ============================================
# This configuration file demonstrates the new audio capabilities
# integrated from the validation work in test/manual/test-audio.js

[global]
# Global ParadoxFX settings
mqtt_broker = localhost
mqtt_port = 1883
mqtt_username = paradoxfx
mqtt_password = your_password
heartbeat_topic = paradox/heartbeat
heartbeat_interval = 30
log_level = info

# =============================================================================
# ENHANCED AUDIO SYSTEM CONFIGURATION
# =============================================================================

[screen_living_room]
# Screen device with enhanced audio capabilities
device_type = screen
name = living_room
display = 0
command_topic = paradox/living-room/screen/command
status_topic = paradox/living-room/screen/status
media_dir = /opt/paradox/apps/pfx/media/living-room

# Video settings
video_volume = 70
video_queue_max = 10

# Enhanced Audio System Settings
# ===============================

# Audio device identifier (from PipeWire validation)
# Use 'auto' for automatic detection or specify exact device
audio_device = pulse/alsa_output.platform-fe00b840.mailbox.stereo-fallback

# Background music settings
background_music_volume = 70    # Default volume for background music (0-100)
ducking_volume = 40            # Volume level during speech ducking (0-100)

# Sound effects settings
effects_volume = 100           # Default volume for sound effects (0-100)

# Speech settings
speech_volume = 90             # Default volume for speech/narration (0-100)

# Per-zone ducking settings (negative values reduce background volume by specified units)
speech_ducking = -26           # Background volume reduction during speech (default: -26)
video_ducking = -24            # Background volume reduction during video (default: -24)

# =============================================================================
# MQTT COMMAND EXAMPLES FOR ENHANCED AUDIO
# =============================================================================

# Background Music Commands:
# --------------------------
# Start background music with looping:
#   {"Command": "playBackgroundMusic", "Audio": "ambient/forest.mp3", "Volume": 70}
#
# Stop background music:
#   {"Command": "stopBackgroundMusic"}
#
# Adjust background music volume in real-time:
#   {"Command": "setBackgroundMusicVolume", "Volume": 50}

# Sound Effects Commands:
# -----------------------
# Play sound effect with low latency (<50ms):
#   {"Command": "playSoundEffect", "Audio": "fx/button_click.wav", "Volume": 100}
#
# Multiple sound effects can play simultaneously:
#   {"Command": "playSoundEffect", "Audio": "fx/alert.wav"}
#   {"Command": "playSoundEffect", "Audio": "fx/success.wav"}

# Speech Commands:
# ----------------
# Play speech with automatic background music ducking:
#   {"Command": "playSpeech", "Audio": "voice/instructions.mp3", "Volume": 90}
#
# Queue multiple speech items:
#   {"Command": "playSpeech", "Audio": "voice/clue1.mp3"}
#   {"Command": "playSpeech", "Audio": "voice/clue2.mp3"}
#
# Clear speech queue:
#   {"Command": "clearSpeechQueue"}

# =============================================================================
# AUDIO SYSTEM ARCHITECTURE SUMMARY
# =============================================================================

# The enhanced audio system uses three distinct subsystems:
#
# 1. BACKGROUND MUSIC:
#    - Persistent MPV instance with IPC control
#    - Seamless looping with --loop-file=inf
#    - Real-time volume control for ducking
#    - Managed through AudioManager background music socket
#
# 2. SOUND EFFECTS:
#    - Fire-and-forget MPV spawn for ultra-low latency
#    - Multiple effects can play simultaneously
#    - Optimized with --audio-buffer=0.02 --cache=no
#    - Sub-50ms latency for immediate feedback
#
# 3. SPEECH/NARRATION:
#    - Queue-based system with automatic background ducking
#    - Coordinated volume management
#    - Automatic restoration of background music volume
#    - Completion detection for seamless transitions
#
# All audio subsystems:
# - Use validated PipeWire device identifiers
# - Support multi-device routing
# - Provide comprehensive error handling
# - Include performance monitoring capabilities

# =============================================================================
# INTEGRATION NOTES
# =============================================================================

# This configuration demonstrates the production-ready audio system
# validated through extensive testing in test/manual/test-audio.js
#
# Key features proven in testing:
# - All three audio outputs working (analog, HDMI-0, HDMI-1)
# - Sub-50ms latency for sound effects
# - Seamless background music without audio gaps
# - Automatic speech ducking and volume restoration
# - Multiple simultaneous audio streams
# - Queue management for ordered speech playback
#
# Ready for production use in escape rooms, interactive installations,
# and multi-screen environments.

[light_living_room]
# Example light device configuration
device_type = light
name = living_room_lights
command_topic = paradox/living-room/lights/command
status_topic = paradox/living-room/lights/status
controller_type = hue
controller_ip = 192.168.1.100

[audio_kitchen]
# Example audio zone configuration
device_type = audio
name = kitchen
command_topic = paradox/kitchen/audio/command
status_topic = paradox/kitchen/audio/status
media_dir = /opt/paradox/apps/pfx/media/kitchen
audio_device = auto
volume = 80

# Per-zone ducking settings (negative values reduce background volume by specified units)
speech_ducking = -26           # Background volume reduction during speech (default: -26)
video_ducking = -24            # Background volume reduction during video (default: -24)
